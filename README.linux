
README Kronometrix Data Recording


1.Supported Operating Systems

  We support the following Linux based operating systems:
    CentOS 6,7 (Final) x86_64, i386
    Foobar Linux 6.x, 7.x x86_64, i386
    CloudLinux 6 x86_64, i386
    Debian 7,8,9 x86_64, i386
    Ubuntu Server Edition 6,7 x86_64, i386
    Raspbian GNU/Linux 7,8 armv6,armv7

  Note: Kernel 2.6.32 (x86_64 i386), 3.12 (armv6)


2.Package Content

  Kronometrix Linux edition contains, all data records, the 
  transport and raw data processing utilties. Along with these 
  come the manual pages and documentation, all for free:

    - recorders: sysrec, cpurec, diskrec, nicrec, hdwrec, procrec, jvmrec, 
      netrec, wsrec, xenrec, webrec, rs485rec, direc, ntprec

    - transport: sender

    - all needed libraries: openssl, libcurl, perl

    - documentation: manual pages


3.Prerequisites

  o CONFIG_BLK_STATS=y, support for block disk device statistics

  o dbus

  o chkconfig, it is not mandatory but highly recommended

  o Ubuntu/Debian based systems enable cron:
      # update-rc.d cron defaults
      # chkconfig --list cron

  o CloudLinux will require additional settings to allow user krmx to
    access /proc interface. 

    Add the following for the /etc/sysctl.conf

      # allow krmx to access /proc
      fs.proc_can_see_other_uid=1
      fs.proc_super_gid=5000

    See here for more information:
    http://docs.cloudlinux.com/index.html?virtualized__proc_filesystem.html


4.Install

  Kronometrix can be installed using the RPM package management system
  found on all RedHat based installations. The data recorders
  and started automatically, after the software has been installed. The
  transport utility will not start automatically.


  RPM package

    # rpm -ihv kdr-1.0.16-centos5.11-x86_64.rpm 
       Preparing...     ########################################### [100%]
          1:kdr         ########################################### [100%]

    # ps -o uid,pid,cmd -u krmx
      UID   PID CMD
     5000 21123 /opt/kronometrix/perl/bin/perl /opt/kronometrix/bin/sysrec 60
     5000 21141 /opt/kronometrix/perl/bin/perl /opt/kronometrix/bin/cpurec 60
     5000 21159 /opt/kronometrix/perl/bin/perl /opt/kronometrix/bin/diskrec 60
     5000 21177 /opt/kronometrix/perl/bin/perl /opt/kronometrix/bin/nicrec 60
     5000 21195 /opt/kronometrix/perl/bin/perl /opt/kronometrix/bin/hdwrec 60


  DEB package

    # dpkg -i kdr-1.0.16-debian7.8-amd64.deb 
      Selecting previously unselected package kdr.
      (Reading database ... 199477 files and directories currently installed.)
      Unpacking kdr (from kdr-1.0.16-debian7.8-amd64.deb) ...
      Setting up kdr (1.0.16) ...


4.Uninstall

  RPM package

    # rpm -e kdr
    # ps -o uid,pid,cmd -u krmx


  DEB package

    # dpkg -P kdr
      (Reading database ... 33706 files and directories currently installed.)
      Removing kdr ...
      dpkg: warning: while removing kdr, directory 
      '/opt/kronometrix/log/current' not empty so not removed


5.Start procedure

  5.1 Recorders

    We can start all data recorders using /opt/kronometrix/etc/rec
    script. Make sure before running that you are logged as krmx user

    As krmx user:
      $ /opt/kronometrix/etc/rec start

    As root:
      # /etc/init.d/kdr start

  5.1 Transport
  
    We can start sender, the transport utility /opt/kronometrix/etc/transport
    script. Make sure before running that you are logged as krmx user

    As krmx user:
      $ /opt/kronometrix/etc/transport start

    As root:
      # /etc/init.d/kdr_transport start


6.Stop procedure

  6.1 Recorders
  
    We can stop all data recorders using /opt/kronometrix/etc/rec
    script. Make sure before running that you are logged as krmx user

    As krmx user:
      $ /opt/kronometrix/etc/rec stop

    As root:
      # /etc/init.d/kdr stop

  6.2 Transport
  
    We can start sender, the transport utility /opt/kronometrix/etc/transport
    script. Make sure before running that you are logged as krmx user

    As krmx user:
      $ /opt/kronometrix/etc/transport stop

    As root:
      # /etc/init.d/kdr_transport stop


7.Raw data

  Kronometrix data recorders will write the raw data under the main
  prefix installation directory:
 
    /opt/kronometrix/log/current

  For every data recorder, one raw data file, having .krd extension
  will be created and updated. Every night, we rotate these krd files
  and store them under:

    /opt/kronometrix/log/daily


8.Configuration

  The main configuratin file, kronometrix.json stores information about 
  the active data recorders being used, the address where data will be 
  delivered for analysis. Additonal, certain recorders might have their 
  own configuration files, like: webrec.json, svcrec.json, rs485rec.json

  8.1 kronometrix.json

    This is the main configuration file, including:

    Logging section

    This is the section defining the base path and the location where all 
    raw data logs will be stored. This can be located on a local disk or 
    a remote LUN storage. Usually, this section, should not be changed or 
    removed.


    Transport section

    Describes all raw data files and their naming convention. Usually, 
    this section, should not be changed or removed.


    Platform section
 
    This is the section where users should defined where they want to 
    send data. The platform section describes the details of one or
    many data analytics platforms, each with own settings.

    All raw data can be transported to one or many platforms at the same
    time. Under this section we need to define and configure, the following:

      o platform port number, the port number default 80
     
      o platform hostname, IP or FQD of the platform 
  
      o protocol: HTTP or HTTPS

      o lmo id: cpd or amd or wcd. cpd means, computer performance data 
        and describes data belong to IT computer performance.

        o sid: subscription id

        o tid: token id

        o dsid: to be let empty, will be automatically be computed

      
  8.2 Log rotation


Notes

  Kronometrix uses its own log rotate mechanism in order to be flexible and 
  dont conflict with the operating system.
