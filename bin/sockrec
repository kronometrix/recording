#!/opt/kronometrix/perl/bin/perl -w

#  Copyright (c) 2021 Stefan Parvu (gitlab.com/sparvu)
#  Initial Author: Stefan Parvu
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software Foundation,
#  Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#  (http://www.gnu.org/copyleft/gpl.html)

use IO::Async::Listener;
 
use IO::Async::Loop;
my $loop = IO::Async::Loop->new;

my $record = "";
 
my $listener = IO::Async::Listener->new(
   on_stream => sub {
      my ( undef, $stream ) = @_;
 
      $stream->configure(
         on_read => sub {
            my ( $self, $buffref, $eof ) = @_;
            $self->write( $$buffref );

            # store the record
            print "$$buffref";

            $$buffref = "";
            return 0;
         },
      );
 
      $loop->add( $stream );
   },
);
 
$loop->add( $listener );

$listener->listen(
   addr => {
      family   => "inet",
      socktype => "stream",
      port     => 44420,
      ip       => "10.10.1.42",
   }
)->get;

$loop->run;


# usage - print usage and exit
#
sub usage {
    print STDERR <<END;
USAGE: sockrec [-hlvV] | [interval]
 e.g. sockrec 60     listen to data, for 60 seconds, then exit
      sockrec        listen to incoming data, print it to STDOUT, continuously
      sockrec -l     listen and save incoming data to raw datafile(s), continuously
      sockrec -V     print recorder revision information

OPTIONS:
  -h        : help information
  -l        : log raw data to krd file, no STDOUT
  -v        : verbose information
  -V        : release version
  interval  : maximum number of seconds between samples
END
    exit 0;
}

# revision - print revision and exit
#
sub revision {
    print STDERR <<END;
Socket Communication Data Recorder for TCP
ICT, Industrial IoT, Weather and Environment
sockrec: 1.0.1, 2021-01-18 1214
END
    exit 0;
}

